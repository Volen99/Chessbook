class Parking {
  constructor(capacity) {
    this.capacity = capacity;
  }

  vehicles = []

  addCar(carModel, carNumber) {
    if (this.capacity <= 0) {
      throw new Error(`Not enough parking space.`);
    }

    this.vehicles.push({carModel: carModel, carNumber: carNumber, payed: false})

    // this.capacity--;

    return `The ${carModel}, with a registration number ${carNumber}, parked.`
  }

  removeCar(carNumber) {
    if (!this.vehicles.some(cm => cm.carNumber === carNumber)) {
      throw Error(`The car, you're looking for, is not found.`);
    }
    let carCurrent = this.vehicles.filter(c => c.carNumber === carNumber)[0];
    if (carCurrent.payed === false) {
      throw Error(`${carNumber} needs to pay before leaving the parking lot.`);
    }

    this.vehicles.splice(carNumber);

    return `${carNumber} left the parking lot.`;
  }

  pay(carNumber) {
    if (!this.vehicles.some(cm => cm.carNumber === carNumber)) {
      throw new Error(`${carNumber} is not in the parking lot.`)
    }

    let carCurrent = this.vehicles.filter(c => c.carNumber === carNumber)[0];
    if (carCurrent.payed === true) {
      throw new Error (`${carNumber}'s driver has already payed his ticket.`)
    }

    carCurrent.payed = true;
    return `${carNumber}'s driver successfully payed for his stay.`
  }

  getStatistics(carNumber) {
    if (!carNumber) {
      let result = '';
      result += `The Parking Lot has ${this.capacity - this.vehicles.length} empty spots left.`
      let sortedDudes = this.vehicles.sort((a, b) => a.carModel[0].localeCompare(b.carModel[0]))
      for (let car of sortedDudes) {
        result += `${car.carModel} == ${car.carNumber} - ${car.payed ? `Has payed` : `Not payed`}\n`;
      }

      return result.trimEnd();
    } else {
      let result = '';
      for (let car of this.vehicles) {
        result += `${car.carModel} == ${car.carNumber} - ${car.payed}`;
      }

      return result;
    }
  }
}


const parking = new Parking(12);

console.log(parking.addCar("Volvo t600","TX3691CA"));
console.log(parking.addCar("Aolvo t600","TX3691CA"));
console.log(parking.getStatistics());

console.log(parking.pay("TX3691CA"));
console.log(parking.removeCar("TX3691CA"));
