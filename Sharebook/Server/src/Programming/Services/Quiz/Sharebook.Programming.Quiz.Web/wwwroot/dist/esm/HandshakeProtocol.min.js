/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/@microsoft/signalr@3.1.3/dist/esm/HandshakeProtocol.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{TextMessageFormat}from"./TextMessageFormat";import{isArrayBuffer}from"./Utils";var HandshakeProtocol=function(){function e(){}return e.prototype.writeHandshakeRequest=function(e){return TextMessageFormat.write(JSON.stringify(e))},e.prototype.parseHandshakeResponse=function(e){var r,t;if(isArrayBuffer(e)||"undefined"!=typeof Buffer&&e instanceof Buffer){var o=new Uint8Array(e);if(-1===(s=o.indexOf(TextMessageFormat.RecordSeparatorCode)))throw new Error("Message is incomplete.");var a=s+1;r=String.fromCharCode.apply(null,o.slice(0,a)),t=o.byteLength>a?o.slice(a).buffer:null}else{var s,n=e;if(-1===(s=n.indexOf(TextMessageFormat.RecordSeparator)))throw new Error("Message is incomplete.");a=s+1;r=n.substring(0,a),t=n.length>a?n.substring(a):null}var i=TextMessageFormat.parse(r),f=JSON.parse(i[0]);if(f.type)throw new Error("Expected a handshake response from the server.");return[t,f]},e}();export{HandshakeProtocol};
//# sourceMappingURL=/sm/4f90eab5559e235ecd3d9e12bdc55dbe5e747be94af900bb10313a6ff59f216b.map