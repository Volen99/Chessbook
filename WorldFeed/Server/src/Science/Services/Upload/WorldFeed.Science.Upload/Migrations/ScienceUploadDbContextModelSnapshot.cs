// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorldFeed.Science.Upload.Infrastructure;

namespace WorldFeed.Science.Upload.Migrations
{
    [DbContext(typeof(ScienceUploadDbContext))]
    partial class ScienceUploadDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WorldFeed.Science.Upload.Domain.Models.Feed", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contributors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FavoriteCount")
                        .HasColumnType("int");

                    b.Property<bool>("Favorited")
                        .HasColumnType("bit");

                    b.Property<string>("FullText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InReplyToScreenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InReplyToStatusId")
                        .HasColumnType("int");

                    b.Property<string>("InReplyToStatusIdStr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InReplyToUserId")
                        .HasColumnType("int");

                    b.Property<string>("InReplyToUserIdStr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsQuoteStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Lang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PossiblySensitive")
                        .HasColumnType("bit");

                    b.Property<bool>("PossiblySensitiveEditable")
                        .HasColumnType("bit");

                    b.Property<int>("QuoteCount")
                        .HasColumnType("int");

                    b.Property<int>("ReplyCount")
                        .HasColumnType("int");

                    b.Property<int>("RetweetCount")
                        .HasColumnType("int");

                    b.Property<bool>("Retweeted")
                        .HasColumnType("bit");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplementalLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Truncated")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Feeds");
                });

            modelBuilder.Entity("WorldFeed.Science.Upload.Domain.Models.Feed", b =>
                {
                    b.OwnsOne("WorldFeed.Science.Upload.Domain.Models.Entities", "Entities", b1 =>
                        {
                            b1.Property<long>("FeedId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.HasKey("FeedId");

                            b1.ToTable("Feeds");

                            b1.WithOwner()
                                .HasForeignKey("FeedId");

                            b1.OwnsMany("WorldFeed.Science.Upload.Domain.Models.HashtagEntity", "Hashtags", b2 =>
                                {
                                    b2.Property<long>("EntitiesFeedId")
                                        .HasColumnType("bigint");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<long>("FeedEntitiesId")
                                        .HasColumnType("bigint");

                                    b2.Property<string>("Indices")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Text")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("EntitiesFeedId", "Id");

                                    b2.ToTable("HashtagEntity");

                                    b2.WithOwner()
                                        .HasForeignKey("EntitiesFeedId");
                                });

                            b1.OwnsMany("WorldFeed.Science.Upload.Domain.Models.MediaFeedEntity", "Medias", b2 =>
                                {
                                    b2.Property<long>("EntitiesFeedId")
                                        .HasColumnType("bigint");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("DisplayURL")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("ExpandedURL")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Indices")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("MediaType")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("MediaURL")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("MediaURLHttps")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("URL")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("EntitiesFeedId", "Id");

                                    b2.ToTable("Feeds_Medias");

                                    b2.WithOwner()
                                        .HasForeignKey("EntitiesFeedId");

                                    b2.OwnsOne("WorldFeed.Science.Upload.Domain.Models.MediaObject", "Sizes", b3 =>
                                        {
                                            b3.Property<long>("MediaFeedEntityEntitiesFeedId")
                                                .HasColumnType("bigint");

                                            b3.Property<int>("MediaFeedEntityId")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int")
                                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                            b3.HasKey("MediaFeedEntityEntitiesFeedId", "MediaFeedEntityId");

                                            b3.ToTable("Feeds_Medias");

                                            b3.WithOwner()
                                                .HasForeignKey("MediaFeedEntityEntitiesFeedId", "MediaFeedEntityId");

                                            b3.OwnsOne("WorldFeed.Science.Upload.Domain.Models.MediaSize", "Large", b4 =>
                                                {
                                                    b4.Property<long>("MediaObjectMediaFeedEntityEntitiesFeedId")
                                                        .HasColumnType("bigint");

                                                    b4.Property<int>("MediaObjectMediaFeedEntityId")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("int")
                                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                                    b4.Property<int?>("Height")
                                                        .HasColumnType("int");

                                                    b4.Property<string>("Resize")
                                                        .HasColumnType("nvarchar(max)");

                                                    b4.Property<int?>("Width")
                                                        .HasColumnType("int");

                                                    b4.HasKey("MediaObjectMediaFeedEntityEntitiesFeedId", "MediaObjectMediaFeedEntityId");

                                                    b4.ToTable("Feeds_Medias");

                                                    b4.WithOwner()
                                                        .HasForeignKey("MediaObjectMediaFeedEntityEntitiesFeedId", "MediaObjectMediaFeedEntityId");
                                                });

                                            b3.OwnsOne("WorldFeed.Science.Upload.Domain.Models.MediaSize", "Medium", b4 =>
                                                {
                                                    b4.Property<long>("MediaObjectMediaFeedEntityEntitiesFeedId")
                                                        .HasColumnType("bigint");

                                                    b4.Property<int>("MediaObjectMediaFeedEntityId")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("int")
                                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                                    b4.Property<int?>("Height")
                                                        .HasColumnType("int");

                                                    b4.Property<string>("Resize")
                                                        .HasColumnType("nvarchar(max)");

                                                    b4.Property<int?>("Width")
                                                        .HasColumnType("int");

                                                    b4.HasKey("MediaObjectMediaFeedEntityEntitiesFeedId", "MediaObjectMediaFeedEntityId");

                                                    b4.ToTable("Feeds_Medias");

                                                    b4.WithOwner()
                                                        .HasForeignKey("MediaObjectMediaFeedEntityEntitiesFeedId", "MediaObjectMediaFeedEntityId");
                                                });

                                            b3.OwnsOne("WorldFeed.Science.Upload.Domain.Models.MediaSize", "Small", b4 =>
                                                {
                                                    b4.Property<long>("MediaObjectMediaFeedEntityEntitiesFeedId")
                                                        .HasColumnType("bigint");

                                                    b4.Property<int>("MediaObjectMediaFeedEntityId")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("int")
                                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                                    b4.Property<int?>("Height")
                                                        .HasColumnType("int");

                                                    b4.Property<string>("Resize")
                                                        .HasColumnType("nvarchar(max)");

                                                    b4.Property<int?>("Width")
                                                        .HasColumnType("int");

                                                    b4.HasKey("MediaObjectMediaFeedEntityEntitiesFeedId", "MediaObjectMediaFeedEntityId");

                                                    b4.ToTable("Feeds_Medias");

                                                    b4.WithOwner()
                                                        .HasForeignKey("MediaObjectMediaFeedEntityEntitiesFeedId", "MediaObjectMediaFeedEntityId");
                                                });

                                            b3.OwnsOne("WorldFeed.Science.Upload.Domain.Models.MediaSize", "Thumb", b4 =>
                                                {
                                                    b4.Property<long>("MediaObjectMediaFeedEntityEntitiesFeedId")
                                                        .HasColumnType("bigint");

                                                    b4.Property<int>("MediaObjectMediaFeedEntityId")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("int")
                                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                                    b4.Property<int?>("Height")
                                                        .HasColumnType("int");

                                                    b4.Property<string>("Resize")
                                                        .HasColumnType("nvarchar(max)");

                                                    b4.Property<int?>("Width")
                                                        .HasColumnType("int");

                                                    b4.HasKey("MediaObjectMediaFeedEntityEntitiesFeedId", "MediaObjectMediaFeedEntityId");

                                                    b4.ToTable("Feeds_Medias");

                                                    b4.WithOwner()
                                                        .HasForeignKey("MediaObjectMediaFeedEntityEntitiesFeedId", "MediaObjectMediaFeedEntityId");
                                                });
                                        });
                                });

                            b1.OwnsMany("WorldFeed.Science.Upload.Domain.Models.SymbolEntity", "Symbols", b2 =>
                                {
                                    b2.Property<long>("EntitiesFeedId")
                                        .HasColumnType("bigint");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Indices")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Text")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("EntitiesFeedId", "Id");

                                    b2.ToTable("SymbolEntity");

                                    b2.WithOwner()
                                        .HasForeignKey("EntitiesFeedId");
                                });

                            b1.OwnsMany("WorldFeed.Science.Upload.Domain.Models.UrlEntity", "Urls", b2 =>
                                {
                                    b2.Property<long>("EntitiesFeedId")
                                        .HasColumnType("bigint");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("DisplayedURL")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("ExpandedURL")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Indices")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("URL")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("EntitiesFeedId", "Id");

                                    b2.ToTable("UrlEntity");

                                    b2.WithOwner()
                                        .HasForeignKey("EntitiesFeedId");
                                });

                            b1.OwnsMany("WorldFeed.Science.Upload.Domain.Models.UserMentionEntity", "UserMentions", b2 =>
                                {
                                    b2.Property<long>("EntitiesFeedId")
                                        .HasColumnType("bigint");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Indices")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Name")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("ScreenName")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("EntitiesFeedId", "Id");

                                    b2.ToTable("UserMentionEntity");

                                    b2.WithOwner()
                                        .HasForeignKey("EntitiesFeedId");
                                });
                        });

                    b.OwnsOne("WorldFeed.Science.Upload.Domain.Models.ExtendedFeedEntities.ExtendedEntities", "ExtendedEntities", b1 =>
                        {
                            b1.Property<long>("FeedId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.HasKey("FeedId");

                            b1.ToTable("Feeds");

                            b1.WithOwner()
                                .HasForeignKey("FeedId");

                            b1.OwnsMany("WorldFeed.Science.Upload.Domain.Models.MediaFeedEntity", "Media", b2 =>
                                {
                                    b2.Property<long>("ExtendedEntitiesFeedId")
                                        .HasColumnType("bigint");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("DisplayURL")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("ExpandedURL")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Indices")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("MediaType")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("MediaURL")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("MediaURLHttps")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("URL")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ExtendedEntitiesFeedId", "Id");

                                    b2.ToTable("Feeds_Media");

                                    b2.WithOwner()
                                        .HasForeignKey("ExtendedEntitiesFeedId");

                                    b2.OwnsOne("WorldFeed.Science.Upload.Domain.Models.MediaObject", "Sizes", b3 =>
                                        {
                                            b3.Property<long>("MediaFeedEntityExtendedEntitiesFeedId")
                                                .HasColumnType("bigint");

                                            b3.Property<int>("MediaFeedEntityId")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int")
                                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                            b3.HasKey("MediaFeedEntityExtendedEntitiesFeedId", "MediaFeedEntityId");

                                            b3.ToTable("Feeds_Media");

                                            b3.WithOwner()
                                                .HasForeignKey("MediaFeedEntityExtendedEntitiesFeedId", "MediaFeedEntityId");

                                            b3.OwnsOne("WorldFeed.Science.Upload.Domain.Models.MediaSize", "Large", b4 =>
                                                {
                                                    b4.Property<long>("MediaObjectMediaFeedEntityExtendedEntitiesFeedId")
                                                        .HasColumnType("bigint");

                                                    b4.Property<int>("MediaObjectMediaFeedEntityId")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("int")
                                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                                    b4.Property<int?>("Height")
                                                        .HasColumnType("int");

                                                    b4.Property<string>("Resize")
                                                        .HasColumnType("nvarchar(max)");

                                                    b4.Property<int?>("Width")
                                                        .HasColumnType("int");

                                                    b4.HasKey("MediaObjectMediaFeedEntityExtendedEntitiesFeedId", "MediaObjectMediaFeedEntityId");

                                                    b4.ToTable("Feeds_Media");

                                                    b4.WithOwner()
                                                        .HasForeignKey("MediaObjectMediaFeedEntityExtendedEntitiesFeedId", "MediaObjectMediaFeedEntityId");
                                                });

                                            b3.OwnsOne("WorldFeed.Science.Upload.Domain.Models.MediaSize", "Medium", b4 =>
                                                {
                                                    b4.Property<long>("MediaObjectMediaFeedEntityExtendedEntitiesFeedId")
                                                        .HasColumnType("bigint");

                                                    b4.Property<int>("MediaObjectMediaFeedEntityId")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("int")
                                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                                    b4.Property<int?>("Height")
                                                        .HasColumnType("int");

                                                    b4.Property<string>("Resize")
                                                        .HasColumnType("nvarchar(max)");

                                                    b4.Property<int?>("Width")
                                                        .HasColumnType("int");

                                                    b4.HasKey("MediaObjectMediaFeedEntityExtendedEntitiesFeedId", "MediaObjectMediaFeedEntityId");

                                                    b4.ToTable("Feeds_Media");

                                                    b4.WithOwner()
                                                        .HasForeignKey("MediaObjectMediaFeedEntityExtendedEntitiesFeedId", "MediaObjectMediaFeedEntityId");
                                                });

                                            b3.OwnsOne("WorldFeed.Science.Upload.Domain.Models.MediaSize", "Small", b4 =>
                                                {
                                                    b4.Property<long>("MediaObjectMediaFeedEntityExtendedEntitiesFeedId")
                                                        .HasColumnType("bigint");

                                                    b4.Property<int>("MediaObjectMediaFeedEntityId")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("int")
                                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                                    b4.Property<int?>("Height")
                                                        .HasColumnType("int");

                                                    b4.Property<string>("Resize")
                                                        .HasColumnType("nvarchar(max)");

                                                    b4.Property<int?>("Width")
                                                        .HasColumnType("int");

                                                    b4.HasKey("MediaObjectMediaFeedEntityExtendedEntitiesFeedId", "MediaObjectMediaFeedEntityId");

                                                    b4.ToTable("Feeds_Media");

                                                    b4.WithOwner()
                                                        .HasForeignKey("MediaObjectMediaFeedEntityExtendedEntitiesFeedId", "MediaObjectMediaFeedEntityId");
                                                });

                                            b3.OwnsOne("WorldFeed.Science.Upload.Domain.Models.MediaSize", "Thumb", b4 =>
                                                {
                                                    b4.Property<long>("MediaObjectMediaFeedEntityExtendedEntitiesFeedId")
                                                        .HasColumnType("bigint");

                                                    b4.Property<int>("MediaObjectMediaFeedEntityId")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("int")
                                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                                    b4.Property<int?>("Height")
                                                        .HasColumnType("int");

                                                    b4.Property<string>("Resize")
                                                        .HasColumnType("nvarchar(max)");

                                                    b4.Property<int?>("Width")
                                                        .HasColumnType("int");

                                                    b4.HasKey("MediaObjectMediaFeedEntityExtendedEntitiesFeedId", "MediaObjectMediaFeedEntityId");

                                                    b4.ToTable("Feeds_Media");

                                                    b4.WithOwner()
                                                        .HasForeignKey("MediaObjectMediaFeedEntityExtendedEntitiesFeedId", "MediaObjectMediaFeedEntityId");
                                                });
                                        });
                                });
                        });

                    b.OwnsOne("WorldFeed.Science.Upload.Domain.Models.Properties.Coordinates", "Coordinates", b1 =>
                        {
                            b1.Property<long>("FeedId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("FeedId");

                            b1.ToTable("Feeds");

                            b1.WithOwner()
                                .HasForeignKey("FeedId");
                        });

                    b.OwnsOne("WorldFeed.Science.Upload.Domain.Models.Properties.Geo", "Geo", b1 =>
                        {
                            b1.Property<long>("FeedId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Type")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FeedId");

                            b1.ToTable("Feeds");

                            b1.WithOwner()
                                .HasForeignKey("FeedId");

                            b1.OwnsMany("WorldFeed.Science.Upload.Domain.Models.Properties.Coordinates", "Coordinates", b2 =>
                                {
                                    b2.Property<long>("GeoFeedId")
                                        .HasColumnType("bigint");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<double>("Latitude")
                                        .HasColumnType("float");

                                    b2.Property<double>("Longitude")
                                        .HasColumnType("float");

                                    b2.HasKey("GeoFeedId", "Id");

                                    b2.ToTable("Feeds_Coordinates1");

                                    b2.WithOwner()
                                        .HasForeignKey("GeoFeedId");
                                });
                        });

                    b.OwnsOne("WorldFeed.Science.Upload.Domain.Models.Properties.Place", "Place", b1 =>
                        {
                            b1.Property<long>("FeedId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CountryCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FullName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("PlaceType")
                                .HasColumnType("int");

                            b1.Property<string>("Url")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FeedId");

                            b1.ToTable("Feeds");

                            b1.WithOwner()
                                .HasForeignKey("FeedId");

                            b1.OwnsOne("WorldFeed.Science.Upload.Domain.Models.Properties.Geo", "BoundingBox", b2 =>
                                {
                                    b2.Property<long>("PlaceFeedId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("bigint")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Type")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("PlaceFeedId");

                                    b2.ToTable("Feeds");

                                    b2.WithOwner()
                                        .HasForeignKey("PlaceFeedId");

                                    b2.OwnsMany("WorldFeed.Science.Upload.Domain.Models.Properties.Coordinates", "Coordinates", b3 =>
                                        {
                                            b3.Property<long>("GeoPlaceFeedId")
                                                .HasColumnType("bigint");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int")
                                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                            b3.Property<double>("Latitude")
                                                .HasColumnType("float");

                                            b3.Property<double>("Longitude")
                                                .HasColumnType("float");

                                            b3.HasKey("GeoPlaceFeedId", "Id");

                                            b3.ToTable("Feeds_Coordinates");

                                            b3.WithOwner()
                                                .HasForeignKey("GeoPlaceFeedId");
                                        });
                                });

                            b1.OwnsOne("WorldFeed.Science.Upload.Domain.Models.Properties.Geo", "Geometry", b2 =>
                                {
                                    b2.Property<long>("PlaceFeedId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("bigint")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Type")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("PlaceFeedId");

                                    b2.ToTable("Feeds");

                                    b2.WithOwner()
                                        .HasForeignKey("PlaceFeedId");

                                    b2.OwnsMany("WorldFeed.Science.Upload.Domain.Models.Properties.Coordinates", "Coordinates", b3 =>
                                        {
                                            b3.Property<long>("GeoPlaceFeedId")
                                                .HasColumnType("bigint");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int")
                                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                            b3.Property<double>("Latitude")
                                                .HasColumnType("float");

                                            b3.Property<double>("Longitude")
                                                .HasColumnType("float");

                                            b3.HasKey("GeoPlaceFeedId", "Id");

                                            b3.ToTable("Feeds_Coordinates2");

                                            b3.WithOwner()
                                                .HasForeignKey("GeoPlaceFeedId");
                                        });
                                });
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
