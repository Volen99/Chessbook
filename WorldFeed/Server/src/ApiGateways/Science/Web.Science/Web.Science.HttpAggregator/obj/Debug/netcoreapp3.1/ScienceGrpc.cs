// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: science.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcScience {
  public static partial class Science
  {
    static readonly string __ServiceName = "ScienceApi.Science";

    static readonly grpc::Marshaller<global::GrpcScience.MediaRequest> __Marshaller_ScienceApi_MediaRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcScience.MediaRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcScience.MediaResponse> __Marshaller_ScienceApi_MediaResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcScience.MediaResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcScience.MediasRequest> __Marshaller_ScienceApi_MediasRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcScience.MediasRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcScience.PaginatedItemsResponse> __Marshaller_ScienceApi_PaginatedItemsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcScience.PaginatedItemsResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcScience.MediaRequest, global::GrpcScience.MediaResponse> __Method_GetMediaById = new grpc::Method<global::GrpcScience.MediaRequest, global::GrpcScience.MediaResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMediaById",
        __Marshaller_ScienceApi_MediaRequest,
        __Marshaller_ScienceApi_MediaResponse);

    static readonly grpc::Method<global::GrpcScience.MediasRequest, global::GrpcScience.PaginatedItemsResponse> __Method_GetMediasByIds = new grpc::Method<global::GrpcScience.MediasRequest, global::GrpcScience.PaginatedItemsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMediasByIds",
        __Marshaller_ScienceApi_MediasRequest,
        __Marshaller_ScienceApi_PaginatedItemsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcScience.ScienceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Science</summary>
    public partial class ScienceClient : grpc::ClientBase<ScienceClient>
    {
      /// <summary>Creates a new client for Science</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ScienceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Science that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ScienceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ScienceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ScienceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// >>
      ///option (google.api.http) = {
      ///get: "/api/v1/catalog/items/{id}"
      ///};
      ///&lt;&lt; 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcScience.MediaResponse GetMediaById(global::GrpcScience.MediaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMediaById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// >>
      ///option (google.api.http) = {
      ///get: "/api/v1/catalog/items/{id}"
      ///};
      ///&lt;&lt; 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GrpcScience.MediaResponse GetMediaById(global::GrpcScience.MediaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMediaById, null, options, request);
      }
      /// <summary>
      /// >>
      ///option (google.api.http) = {
      ///get: "/api/v1/catalog/items/{id}"
      ///};
      ///&lt;&lt; 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcScience.MediaResponse> GetMediaByIdAsync(global::GrpcScience.MediaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMediaByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// >>
      ///option (google.api.http) = {
      ///get: "/api/v1/catalog/items/{id}"
      ///};
      ///&lt;&lt; 
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GrpcScience.MediaResponse> GetMediaByIdAsync(global::GrpcScience.MediaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMediaById, null, options, request);
      }
      public virtual global::GrpcScience.PaginatedItemsResponse GetMediasByIds(global::GrpcScience.MediasRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMediasByIds(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::GrpcScience.PaginatedItemsResponse GetMediasByIds(global::GrpcScience.MediasRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMediasByIds, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcScience.PaginatedItemsResponse> GetMediasByIdsAsync(global::GrpcScience.MediasRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMediasByIdsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::GrpcScience.PaginatedItemsResponse> GetMediasByIdsAsync(global::GrpcScience.MediasRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMediasByIds, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ScienceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ScienceClient(configuration);
      }
    }

  }
}
#endregion
