@import '_variables';
@import '_mixins';
@import '_bootstrap-variables';
@import '_miniature';

$player-factor: #{16/9};
$video-info-margin-left: 44px;

$video-height: 66vh;

@function getPlayerHeight ($width) {
  @return calc(#{$width} / #{$video-watch-player-factor});
}

@function getPlayerWidth ($height) {
  @return calc(#{$height} * #{$video-watch-player-factor});
}

.row {
  width: 100%;
  clear: both;
}

.twitch {
  position: relative;
}

.cell-12 {
  width: 100%;
}

.cell {
  padding: 0 15px;
  float: left;
  display: block;
  margin: 0;
}

.twitch .twitch-video {
  padding-top: 56.25%;
  position: relative;
  height: 0;
}

.twitch .twitch-video iframe {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
}

.twitch .twitch-chat {
  height: 400px;
}

.twitch .twitch-chat iframe {
  width: 100%;
  height: 100%;
}

@media screen and (min-width: 850px) {
  .twitch {
    position: relative;
  }

  .twitch .twitch-video {
    width: 75%;
    padding-top: 42.1875%;
  }

  .twitch .twitch-chat {
    width: 25%;
    height: auto;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
  }
}


//.row {
//  width: 100%;
//  clear: both;
//}
//
//.twitch .twitch-video {
//  padding-top: 56.25%;
//  position: relative;
//  height: 0;
//}
//
//.twitch .twitch-video iframe {
//  position: absolute;
//  width: 100% !important;
//  height: 100% !important;
//  top: 0;
//}
//
//.twitch .twitch-chat {
//  height: 400px;
//}
//
//.twitch .twitch-chat iframe {
//  width: 100%;
//  height: 100%;
//}



@media screen and (min-width: 850px) {
  .twitch {
    position: relative;
  }

  .twitch .twitch-video {
    width: 75%;
    padding-top: 42.1875%;
  }

  .twitch .twitch-chat {
    width: 25%;
    height: auto;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
  }
}







.root {
  &.theater-enabled #video-wrapper {
    $height: calc(100vh - #{$header-height} - #{$theater-bottom-space});

    flex-direction: column;
    justify-content: center;

    #videojs-wrapper {
      width: 100%;
      height: $height;
    }

    ::ng-deep .video-js {
      height: $height;
      width: 100%;
      max-width: initial;
    }

    //my-video-watch-playlist ::ng-deep .playlist {
    //  @include playlist-below-player;
    //}
  }
}

#video-wrapper {
  background-color: #000;
  display: flex;
  justify-content: center;

  ::ng-deep .video-js {
    width: 100%;
    max-width: getPlayerWidth($video-height);
    height: $video-height;

    // VideoJS create an inner video player
    video {
      outline: 0;
      position: relative !important;
    }
  }
}

#videojs-wrapper {
  display: flex;
  justify-content: center;
  flex-grow: 1;
  height: $video-height;
}

// Use the same breakpoint than in the typescript component to display the other video miniatures as row
@media screen and (max-width: 1100px) {
  #video-wrapper {
    flex-direction: column;
    justify-content: center;

    //my-video-watch-playlist ::ng-deep .playlist {
    //  @include playlist-below-player;
    //}
  }

  .video-bottom {
    flex-direction: column;
  }

  //my-recommended-videos {
  //  @include padding-left(0);
  //}
}

@media screen and (max-width: 600px) {
  #videojs-wrapper {
    height: getPlayerHeight(100vw) !important;

    .remote-server-down,
    ::ng-deep .video-js {
      width: 100vw;
      height: getPlayerHeight(100vw) !important;
    }
  }

  .video-bottom {
    margin-top: 20px !important;
    padding-bottom: 20px !important;
  }

  .video-info {
    padding: 0;
  }

  .video-info-name {
    font-size: 20px;
    height: auto;
  }
}

@media screen and (max-width: 450px) {
  .video-info-name {
    font-size: 18px;
  }

  .video-info-date-views {
    font-size: 14px;
  }

  //my-action-buttons {
  //  margin-top: 10px;
  //}
}

// Special case for iOS, that takes into account the width for fullscreens
#video-wrapper ::ng-deep .video-js.vjs-fullscreen {
  max-width: unset;
}

.remote-server-down {
  color: #fff;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  justify-content: center;
  background-color: #141313;
  width: 100%;
  font-size: 24px;
  height: 500px;

  @media screen and (max-width: 1000px) {
    font-size: 20px;
  }

  @media screen and (max-width: 600px) {
    font-size: 16px;
  }
}

.margin-content {
  margin-left: 30px;
  margin-right: 30px;
  flex-grow: 1;
}

.video-bottom {
  display: flex;
  margin-top: 1.5rem;

  .video-info {
    flex-grow: 1;
    // Set min width for flex item
    min-width: 1px;
    max-width: 100%;

    .video-info-first-row {
      display: flex;

      & > div:first-child {
        flex-grow: 1;
      }

      .video-info-name {
        margin-right: 30px;
        min-height: 40px; // Align with the action buttons
        font-size: 27px;
        font-weight: $font-semibold;
        flex-grow: 1;
      }

      .video-info-first-row-bottom {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        width: 100%;
      }

      .video-info-date-views {
        align-self: start;
        margin-bottom: 10px;
        margin-right: 10px;
        font-size: 1em;
      }

      .video-info-channel {
        font-weight: $font-semibold;
        font-size: 15px;

        a {
          @include disable-default-a-behaviour;

          color: pvar(--mainForegroundColor);

          &:hover {
            opacity: 0.8;
          }
        }

        .video-info-channel-left {
          flex-grow: 1;

          .video-info-channel-left-links {
            display: flex;
            flex-direction: column;
            position: relative;
            line-height: 1.37;

            a:nth-of-type(2) {
              font-weight: $font-regular;
              font-size: 90%;
            }

            a.single-link {
              margin-top: 7px;
            }
          }
        }

        my-subscribe-button {
          margin-left: 5px;
        }
      }

      my-feed {
        margin-left: 5px;
        margin-top: 1px;
      }

      .video-actions-rates {
        margin: 0 0 10px 0;
        align-items: start;
        width: max-content;
        margin-left: auto;

        .video-actions {
          height: 40px; // Align with the title
          display: flex;
          align-items: center;

          .action-button:not(:first-child),
          .action-dropdown,
          my-video-actions-dropdown {
            margin-left: 5px;
          }

          ::ng-deep.action-button {
            @include peertube-button;
            @include button-with-icon(21px, 0, -1px);
            @include apply-svg-color(pvar(--actionButtonColor));

            font-size: 100%;
            font-weight: $font-semibold;
            display: inline-block;
            padding: 0 10px 0 10px;
            white-space: nowrap;
            background-color: transparent !important;
            color: pvar(--actionButtonColor);
            text-transform: uppercase;

            &::after {
              display: none;
            }

            &:hover {
              opacity: 0.9;
            }

            &.action-button-like,
            &.action-button-dislike {
              filter: brightness(120%);

              .count {
                margin: 0 5px;
              }
            }

            &.action-button-like.activated {
              .count {
                color: pvar(--activatedActionButtonColor);
              }

              fa-icon {
                @include apply-svg-color(pvar(--activatedActionButtonColor));
              }
            }

            &.action-button-dislike.activated {
              .count {
                color: pvar(--activatedActionButtonColor);
              }

              fa-icon {
                @include apply-svg-color(pvar(--activatedActionButtonColor));
              }
            }

            &.action-button-support {
              color: pvar(--supportButtonColor);

              fa-icon {
                @include apply-svg-color(pvar(--supportButtonColor));
              }
            }

            &.action-button-support {
              fa-icon {
                ::ng-deep path:first-child {
                  fill: pvar(--supportButtonHeartColor) !important;
                }
              }
            }

            &.action-button-save {
              fa-icon {
                top: 0 !important;
                right: -1px;
              }
            }

            .icon-text {
              margin-left: 3px;
            }
          }
        }

        .video-info-likes-dislikes-bar-outer-container {
          position: relative;
        }

        .video-info-likes-dislikes-bar-inner-container {
          position: absolute;
          height: 20px;
        }

        .video-info-likes-dislikes-bar {
          $likes-bar-height: 2px;
          height: $likes-bar-height;
          margin-top: -$likes-bar-height;
          width: 120px;
          background-color: #ccc;
          position: relative;
          top: 10px;

          .likes-bar {
            height: 100%;
            background-color: #909090;

            &.liked {
              background-color: pvar(--activatedActionButtonColor);
            }
          }
        }
      }
    }

    .video-info-description {
      margin: 20px 0;
      margin-left: $video-info-margin-left;
      font-size: 15px;

      .video-info-description-html {
        @include peertube-word-wrap;

        ::ng-deep a {
          text-decoration: none;
        }
      }

      .glyphicon, .description-loading {
        margin-left: 3px;
      }

      .description-loading {
        display: inline-block;
      }

      .video-info-description-more {
        cursor: pointer;
        font-weight: $font-semibold;
        color: pvar(--greyForegroundColor);
        font-size: 14px;

        .glyphicon {
          position: relative;
          top: 2px;
        }
      }
    }

    .video-attributes {
      margin-left: $video-info-margin-left;
    }

    .video-attributes .video-attribute {
      font-size: 13px;
      display: block;
      margin-bottom: 12px;

      .video-attribute-label {
        min-width: 142px;
        padding-right: 5px;
        display: inline-block;
        color: pvar(--greyForegroundColor);
        font-weight: $font-bold;
      }

      a.video-attribute-value {
        @include disable-default-a-behaviour;
        color: pvar(--mainForegroundColor);

        &:hover {
          opacity: 0.9;
        }
      }

      &.video-attribute-tags {
        .video-attribute-value:not(:nth-child(2)) {
          &::before {
            content: ', '
          }
        }
      }
    }
  }
}
